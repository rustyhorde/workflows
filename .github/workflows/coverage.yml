on:
  workflow_call:
    inputs:
      os:
        description: 'The os to run this job on [ubuntu-latest, macos-latest, windows-latest]'
        required: true
        type: string
      channel:
        description: 'The rust channel to use [stable, beta, nightly, version i.e. 1.70.0]'
        required: true
        type: string
      target:
        description: 'The rust target, i.e x86_64-unknown-linux-gnu'
        required: true
        type: string
      clean:
        description: 'Clean the workspace before running llvm-cov'
        default: false
        required: false
        type: boolean
      lcov:
        description: 'Generate an LCOV report (lcov.info)'
        default: false
        required: false
        type: boolean
      html:
        description: 'Generate an HTML report'
        default: false
        required: false
        type: boolean
      run_cmd:
        description: 'The command to run to generate the llvm-cov output'
        default: cargo llvm-cov --no-report
        required: false
        type: string
  
name: ðŸ§± Coverage ðŸ§±

jobs:
  coverage:
    name: ðŸ§± Coverage ðŸ§±
    runs-on: ${{ inputs.os }}
    steps:
      - name: âœ… Checkout âœ…
        uses: actions/checkout@v4
      - name: ðŸ§¹ Cleanup ðŸ§¹
        if: inputs.os == 'ubuntu-latest'
        run: |
          rm -rf /home/runner/.cargo/bin/rustfmt
          rm -rf /home/runner/.cargo/bin/cargo-fmt
          rm -rf /home/runner/.cargo/bin/rust-analyzer
      - name: ðŸ§¹ Cleanup ðŸ§¹
        if: inputs.os == 'windows-latest'
        run: |
          del C:\Users\runneradmin\.cargo\bin\rustfmt
          del C:\Users\runneradmin\.cargo\bin\cargo-fmt
          del C:\Users\runneradmin\.cargo\bin\rust-analyzer
      - name: ðŸ§° Toolchain ðŸ§°
        run: |
          rustup toolchain remove ${{ inputs.channel }}-${{ inputs.target }}
          rustup toolchain add ${{ inputs.channel }}-${{ inputs.target }} --profile minimal
          rustup default ${{ inputs.channel }}
          rustup component add llvm-tools-preview
      - name: ðŸ’µ Rust Cache ðŸ’µ
        uses: Swatinem/rust-cache@v2
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        with:
          key: ${{ inputs.target }}
          cache-all-crates: true
      - name: ðŸ’¾ Install (cargo-binstall) ðŸ’¾
        uses: cargo-bins/cargo-binstall@main
      - name: ðŸ’¾ Install (llvm-cov) ðŸ’¾
        run: cargo binstall --no-confirm --no-symlinks cargo-llvm-cov --force
      - name: ðŸ’¾ Install (cargo-matrix) ðŸ’¾
        run: cargo binstall --no-confirm --no-symlinks --no-discover-github-token cargo-matrix --force
      - name: ðŸ™Š Clean Workspace ðŸ™Š
        if: inputs.clean
        run: cargo llvm-cov clean --workspace
      - name: ðŸ™Š Code Coverage ðŸ™Š
        env:
          ARANGODB_ROOT_PASSWORD: ${{ secrets.ARANGODB_ROOT_PASSWORD }}
          ARANGODB_RUARANGO_PASSWORD: ${{ secrets.ARANGODB_RUARANGO_PASSWORD }}
          ARANGODB_URL: ${{ secrets.ARANGODB_URL }}
          BB8_MONGODB_URL: ${{ secrets.BB8_MONGODB_URL }}
          BB8_MONGODB_USER: ${{ secrets.BB8_MONGODB_USER }}
          BB8_MONGODB_PASSWORD: ${{ secrets.BB8_MONGODB_PASSWORD }}
        run: ${{ inputs.run_cmd }}
      - name: ðŸ™Š Code Coverage Report (LCOV) ðŸ™Š
        if: inputs.lcov
        run: cargo llvm-cov report --lcov --output-path lcov.info
      - name: ðŸ™Š Code Coverage Report (HTML) ðŸ™Š
        if: inputs.html
        run: cargo llvm-cov report --html
      - name: ðŸ™Š Upload Code Coverage ðŸ™Š
        if: inputs.lcov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./lcov.info
