on:
  workflow_call:
    inputs:
      num_chunks:
        description: "The number of chunks to run for test-all-features"
        default: 1
        required: false
        type: number
      chunk:
        description: "The chunk number to run for test-all-features"
        default: 1
        required: false
        type: number

name: ğŸ¦€ Rust (Tier 2) ğŸ¦€

jobs:
  build-tier-2:
    name: ğŸ§± Build ğŸ§±
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets:
          [
            aarch64-linux-android,
            aarch64-unknown-linux-gnu,
            aarch64-unknown-linux-musl,
            i686-pc-windows-gnu,
            i686-unknown-linux-gnu,
            powerpc-unknown-linux-gnu,
            powerpc64-unknown-linux-gnu,
            riscv64gc-unknown-linux-gnu,
            sparc64-unknown-linux-gnu,
            wasm32-unknown-emscripten,
            x86_64-unknown-linux-musl,
          ]
    steps:
      - name: âœ… Checkout âœ…
        uses: actions/checkout@v4
      - name: ğŸ§° Toolchain ğŸ§°
        run: |
          rm -rf /home/runner/.cargo/bin/rustfmt
          rm -rf /home/runner/.cargo/bin/cargo-fmt
          rm -rf /home/runner/.cargo/bin/rust-analyzer
          rustup toolchain remove nightly-x86_64-unknown-linux-gnu
          rustup toolchain add nightly-x86_64-unknown-linux-gnu --profile minimal
          rustup target add ${{ matrix.targets }}
          rustup default nightly
      - name: ğŸ’µ Rust Cache ğŸ’µ
        uses: Swatinem/rust-cache@v2
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        with:
          key: x86_64-unknown-linux-gnu
          cache-all-crates: true
      - name: ğŸ’¾ Install (cargo-binstall) ğŸ’¾
        uses: cargo-bins/cargo-binstall@main
      - name: ğŸ’¾ Install (all-features) ğŸ’¾
        run: cargo binstall --no-confirm --no-symlinks cargo-all-features --force
      - name: ğŸ’¾ Install (cross) ğŸ’¾
        run: cargo binstall --no-confirm --no-symlinks cross --force
      - name: ğŸ§± Build ğŸ§±
        run: cross build-all-features --n-chunks ${{ inputs.num_chunks }} --chunk ${{inputs.chunk }} --target=${{ matrix.targets.target }}
