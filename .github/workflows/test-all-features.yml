on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      channel:
        required: true
        type: string
      target:
        required: true
        type: string
      num_chunks:
        required: true
        type: number
      chunk:
        required: true
        type: number

name: ğŸ§ª Test ğŸ§ª

jobs:
  test-all-features:
    name: ğŸ§ª Test ğŸ§ª
    runs-on: ${{ inputs.os }}
    steps:
      - name: âœ… Checkout âœ…
        uses: actions/checkout@v4
      - name: ğŸ§¹ Cleanup ğŸ§¹
        if: inputs.os == 'ubuntu-latest'
        run: |
          rm -rf /home/runner/.cargo/bin/rustfmt
          rm -rf /home/runner/.cargo/bin/cargo-fmt
          rm -rf /home/runner/.cargo/bin/rust-analyzer
      - name: ğŸ§° Toolchain ğŸ§°
        run: |
          rustup toolchain remove ${{ inputs.channel }}-${{ inputs.target }}
          rustup toolchain add ${{ inputs.channel }}-${{ inputs.target }} --profile minimal
          rustup default ${{ inputs.channel }}
      - name: ğŸ’µ Rust Cache ğŸ’µ
        uses: Swatinem/rust-cache@v2
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        with:
          key: ${{ inputs.target }}
          cache-all-crates: true
      - name: ğŸ’¾ Install (cargo-binstall) ğŸ’¾
        uses: cargo-bins/cargo-binstall@main
      - name: ğŸ’¾ Install (all-features) ğŸ’¾
        run: cargo binstall --no-confirm --no-symlinks cargo-all-features --force
      - name: ğŸ§ª Test ğŸ§ª
        run:  cargo test-all-features --n-chunks ${{ inputs.num_chunks }} --chunk ${{ inputs.chunk }}