on:
  workflow_call:
    inputs:
      os:
        description: 'The os to run this job on [ubuntu-latest, macos-latest, windows-latest]'
        required: true
        type: string
      channel:
        description: 'The rust channel to use [stable, beta, nightly, version i.e. 1.70.0]'
        required: true
        type: string
      target:
        description: 'The rust target, i.e x86_64-unknown-linux-gnu'
        required: true
        type: string
      num_chunks:
        description: 'The number of chunks to run for cargo-matrix'
        default: 1
        required: false
        type: number
      chunk:
        description: 'The chunk number to run for cargo-matrix'
        default: 1
        required: false
        type: number
      project:
        description: 'The project to run cargo-matrix against (useful in workspaces)'
        default: ''
        required: false
        type: string
      update:
        description: 'Run cargo update before running clippy command'
        required: false
        default: false
        type: boolean

name: ðŸ§ª Test ðŸ§ª

jobs:
  test-all-features:
    name: ðŸ§ª Test ðŸ§ª
    runs-on: ${{ inputs.os }}
    env:
      ARANGODB_ROOT_PASSWORD: ${{ secrets.ARANGODB_ROOT_PASSWORD }}
      ARANGODB_RUARANGO_PASSWORD: ${{ secrets.ARANGODB_RUARANGO_PASSWORD }}
      ARANGODB_URL: ${{ secrets.ARANGODB_URL }}
      BB8_MONGODB_URL: ${{ secrets.BB8_MONGODB_URL }}
      BB8_MONGODB_USER: ${{ secrets.BB8_MONGODB_USER }}
      BB8_MONGODB_PASSWORD: ${{ secrets.BB8_MONGODB_PASSWORD }}
    steps:
      - name: âœ… Checkout âœ…
        uses: actions/checkout@v4
      - name: ðŸ§¹ Cleanup ðŸ§¹
        if: inputs.os == 'ubuntu-latest'
        run: |
          rm -rf /home/runner/.cargo/bin/rustfmt
          rm -rf /home/runner/.cargo/bin/cargo-fmt
          rm -rf /home/runner/.cargo/bin/rust-analyzer
      - name: ðŸ§¹ Cleanup ðŸ§¹
        if: inputs.os == 'windows-latest'
        run: |
          del C:\Users\runneradmin\.cargo\bin\rustfmt
          del C:\Users\runneradmin\.cargo\bin\cargo-fmt
          del C:\Users\runneradmin\.cargo\bin\rust-analyzer
      - name: ðŸ§° Toolchain ðŸ§°
        run: |
          rustup toolchain remove ${{ inputs.channel }}-${{ inputs.target }}
          rustup toolchain add ${{ inputs.channel }}-${{ inputs.target }} --profile minimal
          rustup default ${{ inputs.channel }}
      - name: ðŸ’µ Rust Cache ðŸ’µ
        uses: Swatinem/rust-cache@v2
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        with:
          key: ${{ inputs.target }}
          cache-all-crates: true
      - name: ðŸ’¾ Install (cargo-binstall) ðŸ’¾
        uses: cargo-bins/cargo-binstall@main
      - name: ðŸ’¾ Install (cargo-matrix) ðŸ’¾
        run: cargo binstall --no-confirm --no-symlinks --no-discover-github-token cargo-matrix --force
      - name: ðŸ”º Update ðŸ”º
        if: inputs.update
        run: cargo update
      - name: ðŸ§ª Test ðŸ§ª
        if: ${{ inputs.project == '' }}
        run:  cargo matrix --num-chunks ${{ inputs.num_chunks }} --chunk ${{ inputs.chunk }} test
      - name: ðŸ§ª Test P ðŸ§ª
        if: ${{ inputs.project != '' }}
        run:  cargo matrix --num-chunks ${{ inputs.num_chunks }} --chunk ${{ inputs.chunk }} -p ${{ inputs.project }} test